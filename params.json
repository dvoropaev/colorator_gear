{
  "name": "Colorator",
  "tagline": "Colorize your text in the terminal.",
  "body": "## Example\r\n\r\n```ruby\r\n\"this string\".red\r\n# => \\x1b[31mthis string\\x1b[0m\r\n\"my string\".blue\r\n# => \\x1b[34mmy string\\x1b[0m\r\n# etc...\r\n```\r\n\r\n## Supported Colors\r\n\r\n- `red`\r\n- `black`\r\n- `green`\r\n- `yellow`\r\n- `magenta`\r\n- `white`\r\n- `blue`\r\n- `cyan`\r\n- `bold`\r\n\r\n## Other supported Ansi methods\r\n\r\n- `clear_line`\r\n- `has_ansi?`, `has_color?`\r\n- `strip_ansi`, `strip_color`\r\n- `reset_ansi`, `reset_color`\r\n- `clear_screen`\r\n- `ansi_jump`\r\n\r\n## Why\r\n\r\nThere are a bunch of gems that provide functionality like this, but none have\r\nas simple an API as this. Just call `\"string\".color` and your text will be\r\ncolorized.\r\n\r\n## License\r\n\r\nMIT. Written as a single Ruby file by Brandon Mathis, converted into a gem by\r\nParker Moore.",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}